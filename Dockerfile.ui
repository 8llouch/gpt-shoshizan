# Monorepo-aware Dockerfile for gpt-ui (build in monorepo, serve via nginx)
FROM node:20-alpine AS builder
WORKDIR /app
COPY . .
ARG VITE_API_BASE_URL
ENV VITE_API_BASE_URL=${VITE_API_BASE_URL}
# Note: VITE_DEV_BEARER_TOKEN should NOT be baked into the image
# It should be injected at runtime via nginx config or client-side logic
RUN npm ci
RUN npm run build -w gpt-ui

FROM nginx:alpine AS runner
# Create non-root user for nginx (GID 101 already exists, use different ID)
RUN addgroup -g 1001 -S nginx-app && \
    adduser -S -D -H -u 1001 -h /var/cache/nginx -s /sbin/nologin -G nginx-app -g nginx-app nginx-app
# Clean default assets and nginx configs
RUN rm -rf /usr/share/nginx/html/* && \
    rm -f /etc/nginx/nginx.conf /etc/nginx/conf.d/default.conf
# Copy build artifacts
COPY --from=builder /app/gpt-ui/dist /usr/share/nginx/html
# Copy optimized nginx configuration
COPY gpt-ui/nginx.conf /etc/nginx/nginx.conf
# Set ownership for non-root user
RUN chown -R nginx-app:nginx-app /usr/share/nginx/html && \
    chown -R nginx-app:nginx-app /var/cache/nginx && \
    chown -R nginx-app:nginx-app /var/log/nginx && \
    touch /var/run/nginx.pid && \
    chown -R nginx-app:nginx-app /var/run/nginx.pid
USER nginx-app
EXPOSE 80
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget -qO- http://localhost/ >/dev/null || exit 1
CMD ["nginx", "-g", "daemon off;"]